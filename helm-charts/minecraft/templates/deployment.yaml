---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minecraft-{{ .Release.Name }}
  labels:
    app: minecraft-{{ .Release.Name }}
spec:
  replicas: {{ if .Values.enabled }}1{{ else }}0{{ end }}
  selector:
    matchLabels:
      app: minecraft-{{ .Release.Name }}
  template:
    metadata:
      labels:
        app: minecraft-{{ .Release.Name }}
    spec:
      containers:
      - name: minecraft-{{ .Release.Name }}
        image: {{ .Values.minecraft.image }}:{{ .Values.minecraft.tag }}
        stdin: true
        tty: true
        env:
        - name: SERVER_NAME
          value: "{{ if .Values.minecraft.name }}{{ .Values.minecraft.name }}{{ else }}{{ .Release.Name }}{{ end }}"
        - name: EULA
          value: "TRUE"
        - name: VERSION
          value: "{{ .Values.minecraft.version }}"
        - name: TYPE
          value: "{{ .Values.minecraft.type }}"
        - name: MODE
          value: "{{ .Values.minecraft.mode }}"
        - name: MOTD
          value: "{{ if .Values.minecraft.motd }}{{ .Values.minecraft.motd }}{{ else }}{{ .Release.Name }}{{ end }}"
        - name: ENABLE_COMMAND_BLOCK
          value: "{{ .Values.minecraft.enable_command_block }}"
        - name: DIFFICULTY
          value: "{{ .Values.minecraft.difficulty }}"
        - name: OPS
          value: "{{ .Values.minecraft.ops }}"
        - name: MODS
          value: "{{ .Values.minecraft.mods }}"
        ports:
        - containerPort: 25565
        - containerPort: 9265
        volumeMounts:
        - mountPath: "/data"
          name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minecraft-{{ .Release.Name }}
